// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id              Int          @id @default(autoincrement())
  firstName      String
  lastName       String
  username        String            @unique
  password        String    
  email           String            @unique
  phone           String
  address         Address[]
  cart            Cart[]
  order           Order[]
}

model Address {
  address_id      Int          @id @default(autoincrement())
  user_id         Int          
  user            User         @relation(fields: [user_id], references: [user_id])
  addressline1    String
  addressline2    String
  city            String
}

model Product {
  product_id      Int          @id @default(autoincrement())
  bekery_id       Int
  productName     String
  price           Float
  bekery          Bekery       @relation(fields: [bekery_id], references: [bekery_id])
  cart            Cart[]    
  orderdetail     OrderDetail[]
}

model Cart {
  cart_id         Int          @id @default(autoincrement())
  user_id         Int
  bekery_id       Int
  product_id      Int       
  quantity        Int
  user            User         @relation(fields: [user_id], references: [user_id])  
  product         Product      @relation(fields: [product_id], references: [product_id])
  bekery          Bekery       @relation(fields: [bekery_id], references: [bekery_id])
}

model Order {
  order_id        Int          @id @default(autoincrement())
  user_id         Int
  bekery_id       Int  
  totalamount     Float
  orderdate       DateTime     @default(now())
  user            User         @relation(fields: [user_id], references: [user_id])
  bekery          Bekery       @relation(fields: [bekery_id], references: [bekery_id])
  payment         Payment[] 

  
}

model Payment {
  payment_id      Int          @id @default(autoincrement())
  order_id        Int
  paymentmethod   String
  order           Order        @relation(fields: [order_id], references: [order_id])
}

model OrderDetail {
  orderdetail_id  Int          @id @default(autoincrement())
  product_id      Int
  quantity        Int
  product         Product      @relation(fields: [product_id], references: [product_id])
}

model Bekery {
  bekery_id       Int          @id @default(autoincrement())
  imagebekery     String
  bekeryname      String
  description     String
  product         Product[] 
  cart            Cart[]
  order           Order[]
}


enum Status {
  pending
  doing
  done
}
